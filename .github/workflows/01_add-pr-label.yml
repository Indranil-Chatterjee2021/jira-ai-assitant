name: PR State Labeling (cURL)

on:
  # Trigger 1: For initial labeling when a PR is opened or reopened
  pull_request:
    types: [opened, reopened]

  # Trigger 2: For review-based labeling when a review is submitted
  pull_request_review:
    types: [submitted]

jobs:
  # Job 1: Add the initial 'PLEASE ADD REVIEWS' label
  apply_initial_label:
    # Only runs when a pull_request event triggers the workflow
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    permissions:
      issues: write
      pull-requests: write
    steps:
      - name: Add 'PLEASE ADD REVIEWS' label to PR
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_NUMBER: ${{ github.event.pull_request.number }}
        run: |
          curl -X POST \
            -H "Authorization: token ${{ env.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github+json" \
            https://api.github.com/repos/${{ github.repository }}/issues/${{ env.PR_NUMBER }}/labels \
            -d '{"labels": ["PLEASE ADD REVIEWS"]}'

  # Job 2: Manage labels based on Code Changes Requested review status
  manage_review_labels:
    # Only runs when a pull_request_review event triggers the workflow
    if: github.event_name == 'pull_request_review'
    runs-on: ubuntu-latest
    permissions:
      issues: write
      pull-requests: write
    steps:
      - name: Check review state and update labels
        # The 'jq' utility is used here to parse the event payload JSON.
        run: |
          # Extract the review state and PR number using jq on the event payload file
          # The GITHUB_EVENT_PATH environment variable points to the JSON payload file.
          REVIEW_STATE=$(jq -r '.review.state' "${GITHUB_EVENT_PATH}")
          PR_NUMBER=$(jq -r '.pull_request.number' "${GITHUB_EVENT_PATH}")

          echo "Review State: $REVIEW_STATE"

          if [ "$REVIEW_STATE" == "changes_requested" ]; then
            echo "Changes requested. Updating labels for PR #$PR_NUMBER."

            # 1. DELETE/Remove PLEASE ADD REVIEWS label
            # Note: The DELETE endpoint requires the label name to be URL-encoded in the URL.
            curl -X DELETE \
              -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
              -H "Accept: application/vnd.github.v3+json" \
              https://api.github.com/repos/${{ github.repository }}/issues/$PR_NUMBER/labels/PLEASE%20ADD%20REVIEWS

            # 2. POST/Add CODE CHANGES REQUESTED label
            curl -X POST \
              -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
              -H "Accept: application/vnd.github+json" \
              https://api.github.com/repos/${{ github.repository }}/issues/$PR_NUMBER/labels \
              -d '{"labels": ["CODE CHANGES REQUESTED"]}'

          else
            echo "Review state is $REVIEW_STATE. Only 'changes_requested' triggers label updates."
          fi